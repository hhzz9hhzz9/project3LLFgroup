<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.mapper.speakerMapper">
  <resultMap id="BaseResultMap" type="com.woniu.pojo.speaker">
    <id column="speaker_id" jdbcType="INTEGER" property="speakerId" />
    <result column="film_id" jdbcType="INTEGER" property="filmId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="speaker_context" jdbcType="VARCHAR" property="speakerContext" />
    <result column="speaker_status" jdbcType="INTEGER" property="speakerStatus" />
    <result column="user_film_socore" jdbcType="REAL" property="userFilmSocore" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    speaker_id, film_id, user_id, speaker_context, speaker_status, user_film_socore
  </sql>
  <select id="selectByExample" parameterType="com.woniu.pojo.speakerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from speaker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitSize >= 0">
      limit #{limitStart} , #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from speaker
    where speaker_id = #{speakerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from speaker
    where speaker_id = #{speakerId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.woniu.pojo.speaker">
    insert into speaker (speaker_id, film_id, user_id, 
      speaker_context, speaker_status, user_film_socore
      )
    values (#{speakerId,jdbcType=INTEGER}, #{filmId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{speakerContext,jdbcType=VARCHAR}, #{speakerStatus,jdbcType=INTEGER}, #{userFilmSocore,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.pojo.speaker">
    insert into speaker
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="speakerId != null">
        speaker_id,
      </if>
      <if test="filmId != null">
        film_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="speakerContext != null">
        speaker_context,
      </if>
      <if test="speakerStatus != null">
        speaker_status,
      </if>
      <if test="userFilmSocore != null">
        user_film_socore,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="speakerId != null">
        #{speakerId,jdbcType=INTEGER},
      </if>
      <if test="filmId != null">
        #{filmId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="speakerContext != null">
        #{speakerContext,jdbcType=VARCHAR},
      </if>
      <if test="speakerStatus != null">
        #{speakerStatus,jdbcType=INTEGER},
      </if>
      <if test="userFilmSocore != null">
        #{userFilmSocore,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.woniu.pojo.speakerExample" resultType="java.lang.Long">
    select count(*) from speaker
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.pojo.speaker">
    update speaker
    <set>
      <if test="filmId != null">
        film_id = #{filmId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="speakerContext != null">
        speaker_context = #{speakerContext,jdbcType=VARCHAR},
      </if>
      <if test="speakerStatus != null">
        speaker_status = #{speakerStatus,jdbcType=INTEGER},
      </if>
      <if test="userFilmSocore != null">
        user_film_socore = #{userFilmSocore,jdbcType=REAL},
      </if>
    </set>
    where speaker_id = #{speakerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.pojo.speaker">
    update speaker
    set film_id = #{filmId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      speaker_context = #{speakerContext,jdbcType=VARCHAR},
      speaker_status = #{speakerStatus,jdbcType=INTEGER},
      user_film_socore = #{userFilmSocore,jdbcType=REAL}
    where speaker_id = #{speakerId,jdbcType=INTEGER}
  </update>
</mapper>